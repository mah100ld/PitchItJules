{"version":3,"sources":["logo.svg","PhraseGenerator/PhraseGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["PhraseGenerator","props","state","wir","und","anstattVon","verb","adjektivNeu","adjektivNeu1","substantivNeu","substantiv1","substantiv2","adjektivAlt","kunde","substantivAlt","punkt","sikSubstantive","sikSubstantiveAlt","sikKunde","sikVerben","sikAdjektiveNeu","sikAdjektiveAlt","setState","Math","floor","random","length","adjektivNeu2","handleClick","class","this","role","className","type","onClick","PureComponent","App","id","width","height","src","frameborder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21cae429.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { PureComponent } from 'react'\nimport '../App.css'\n\n\nclass PhraseGenerator extends PureComponent {\n    constructor(props) {\n        super(props);\n\n    }\n\n    state = {\n        wir: \"\",\n        und: \"\",\n        anstattVon: \"\",\n        verb: \"\",\n        adjektivNeu: \"\",\n        adjektivNeu1: \"\",\n        substantivNeu: \"\",\n        substantiv1: \"\",\n        substantiv2: \"\",\n        adjektivAlt: \"\",\n        kunde: \"\",\n        substantivAlt: \"\",\n        punkt: \"\"\n    }\n\n\n    PhraseGenerator = () => {\n        const sikSubstantive = [\"Offenheit\", \"Vernetzung\", \"Two-Speed Strategy\", \"Stabilität\", \"Moonshot Labs\", \"Biodiversity\", \"Female Empowerment\", \"EEG Tracking\", \"Speedboats\", \"Ecosystems\", \"Ökosysteme\", \"Kultur\", \"Veränderung\", \"Infight\", \"Transformation\", \"Diversifikation\", \"Cross-Pollination\", \"Asset\", \"Value\", \"Agilität\", \"Design-Thinking Prozesse\", \"Data-driven Organization\", \"Blockchain-Technologie\", \"Neurowissenschaften\", \"Brainstormings\", \"Impact\", \"Diversity\"]\n        const sikSubstantiveAlt = [\"Prozessen\", \"Silodenken\", \"Monitor Strategien\", \"Allnightern\", \"Bonus Meilen\", \"Facetime Regelungen\", \"weißen Männern dominierten Büros\", \"Mansplaining\", \"Hierarchien\", \"Top-Down Hierarchien\", \"Gender Pay-Gap\", \"Status Quo\", \"Legacy Systemen\", \"Konformität\"]\n        const sikKunde = [\"durch Meditation und Atemübungen\",\"beim Kunden\", \"mittels Quantum Technologie\", \"durch Tokenisierung\",\"durch Transhumanismus\", \"durch OKR Workshops\", \"in der Organisation\", \"im Rahmen eines Culture-Change Programms\", \"durch Open Innovation\", \"mithilfe von AI\", \"durch unsere Deep-Dive Methodik\", \"mit unserem proven Readyness-Framework\", \"durch Einführung einer Matrixorganisation\", \"durch flache Hierarchien\", \"mit Freibier am Freitag\", \"durch einen iterativen Stage-Gate Prozess\", \"durch Circular Economy\", \"mithilfe der Scrum Methodologie\"]\n        const sikVerben = [\"verbessern\", \"generieren\", \"fordern\", \"fördern\", \"ermöglichen\", \"leveragen\", \"challengen\", \"updaten\", \"penetrieren\"]\n        const sikAdjektiveNeu = [\"unternehmerische\", \"high-level\", \"kulturelle\", \"disruptive\", \"inkrementelle\", \"asset-based\", \"value-based\", \"fact-fullness\", \"ambidextreous\",\"holisitische\", \"open-minded\", \"tangible\", \"AI-driven\", \"innovative\", \"cutting-edge\", \"state-of-the-art\", \"demand-driven\", \"human-centric\", \"client focussed\", \"agile\"]\n        const sikAdjektiveAlt = [\"klassischen\", \"ausgedienten\", \"überholten\", \"stagnierenden\", \"langweiligen\", \"dummen\", \"ollen\"]\n        const sentence = \"\"\n\n        this.setState({\n            wir: \"Wir\",\n            und: \"und\",\n            anstattVon: \"anstatt von\",\n            punkt: \".\",\n            substantiv1: (sikSubstantive[Math.floor(Math.random() * sikSubstantive.length)]),\n            substantiv2: (sikSubstantive[Math.floor(Math.random() * sikSubstantive.length)]),\n            verb: (sikVerben[Math.floor(Math.random() * sikVerben.length)]),\n            adjektivNeu1: (sikAdjektiveNeu[Math.floor(Math.random() * sikAdjektiveNeu.length)]),\n            adjektivNeu2: (sikAdjektiveNeu[Math.floor(Math.random() * sikAdjektiveNeu.length)]),\n            adjektivAlt: (sikAdjektiveAlt[Math.floor(Math.random() * sikAdjektiveAlt.length)]),\n            kunde: (sikKunde[Math.floor(Math.random() * sikKunde.length)]),\n            substantivAlt: (sikSubstantiveAlt[Math.floor(Math.random() * sikSubstantiveAlt.length)])\n        })\n    }\n\n    handleClick = () => {\n        return PhraseGenerator()\n      }\n\n    render() {\n        return (\n            <div>\n                <div class=\"container\">\n                <h1 class=\"col text-center\">The Investor Pitch 101</h1>\n                <div class=\"row\">\n                    {this.state.kunde == \"\" ? <h2 class=\"alert alert-secondary\" role=\"alert\">Ey Julian, uns geht das Geld aus. Wir brauchen bis heute EOB einen Investoren-Pitch! Der muss 1a aligned und Investor-ready sein!! Wir brauchen ein paar game-changer Sätze von Dir, damit das Term Sheet sofort unterschrieben wird!</h2> : <h2 class=\"alert alert-secondary\" role=\"alert\">{this.state.wir} {this.state.verb} {this.state.adjektivNeu1} {this.state.substantiv1} {this.state.und} {this.state.adjektivNeu2} {this.state.substantiv2} {this.state.anstattVon} {this.state.adjektivAlt} {this.state.substantivAlt} {this.state.kunde}{this.state.punkt}</h2>} \n                </div>\n                <div className=\"col text-center mt-1\">\n                <button type=\"button\" class=\"btn btn-success button\" onClick={() => this.PhraseGenerator()}>Komm ins Doing!</button>\n                </div>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default PhraseGenerator\n","import logo from './logo.svg';\nimport './App.css';\nimport PhraseGenerator from './PhraseGenerator/PhraseGenerator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div class=\"container\">\n        <div class=\"row align-items-center\">\n          <div className=\"header-background\">\n\n          </div>\n        </div>\n        <div class=\"row mt-5 pl-2 pr-2\">\n          <PhraseGenerator />\n          </div>\n\n        <div className=\"row mt-5 ml-10 mr-10\">\n        <iframe id=\"ytplayer\" type=\"text/html\" width=\"640\" height=\"360\"\n        src=\"https://www.youtube.com/watch?v=nUE841pCXtc\"\n        frameborder=\"0\"></iframe>\n        </div>\n      </div>\n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}